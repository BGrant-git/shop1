{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Typography, Grid, Card, CardMedia, Button, CardActions, useTheme, makeStyles } from '@material-ui/core';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart'; // lay it out horiz\n// so pic to the left, description and info to the right\n// potentially put a local state in here to store the item\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    padding: 20\n  },\n  mobileCard: {\n    borderRadius: 0,\n    textAlign: 'center'\n  },\n  mobImg: {\n    width: '100%',\n    height: 350,\n    margin: 'auto'\n  },\n  mobBtns: {\n    justifyContent: 'center'\n  },\n  deskCard: {\n    borderRadius: 0\n  },\n  deskImg: {\n    height: 285,\n    marginBottom: -3\n  },\n  deskText: {\n    padding: 5\n  },\n  deskBtnsBox: {\n    padding: 5,\n    marginTop: 190\n  },\n  deskBtns: {\n    margin: 2,\n    padding: 5\n  },\n  type: {\n    padding: 15\n  }\n});\n\nconst Product = ({\n  viewProduct,\n  addToCart\n}) => {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));\n  return __jsx(Grid, {\n    container: true,\n    direction: \"column\",\n    className: classes.root,\n    style: !isMobile ? {\n      marginBottom: 200\n    } : null\n  }, isMobile ? __jsx(React.Fragment, null, __jsx(Grid, {\n    item: true\n  }, __jsx(Card, {\n    className: classes.mobileCard\n  }, __jsx(Typography, {\n    className: classes.type,\n    variant: \"h4\"\n  }, viewProduct.name.toUpperCase()), __jsx(CardMedia, {\n    className: classes.mobImg,\n    image: viewProduct.img,\n    title: \"img\"\n  }), __jsx(Typography, {\n    className: classes.type,\n    variant: \"body1\"\n  }, viewProduct.description), __jsx(Typography, {\n    variant: \"h6\"\n  }, \"\\xA3\", viewProduct.price), __jsx(Typography, {\n    className: classes.type,\n    variant: \"body2\"\n  }, \"Tags: \", viewProduct.tags), __jsx(CardActions, {\n    className: classes.mobBtns\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      addToCart(viewProduct);\n    },\n    variant: \"contained\"\n  }, __jsx(ShoppingCartIcon, null)), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    variant: \"contained\"\n  }, __jsx(ShareIcon, null)))))) : __jsx(React.Fragment, null, __jsx(Card, {\n    className: classes.deskCard\n  }, __jsx(Grid, {\n    item: true,\n    container: true,\n    direction: \"row\"\n  }, __jsx(Grid, {\n    item: true,\n    sm: 3\n  }, __jsx(\"img\", {\n    src: viewProduct.img,\n    className: classes.deskImg\n  })), __jsx(Grid, {\n    item: true,\n    sm: 7,\n    className: classes.type\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    className: classes.deskText\n  }, viewProduct.name.toUpperCase()), __jsx(Typography, {\n    variant: \"body2\",\n    className: classes.deskText\n  }, viewProduct.description), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.deskText\n  }, \"\\xA3\", viewProduct.price), __jsx(Typography, {\n    variant: \"subtitle1\"\n  }, \"Tags: \", viewProduct.tags)), __jsx(Grid, {\n    item: true,\n    sm: 2,\n    className: classes.deskBtnsBox\n  }, __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    onClick: () => {\n      addToCart(viewProduct);\n    },\n    variant: \"contained\",\n    className: classes.deskBtns\n  }, __jsx(ShoppingCartIcon, null)), __jsx(Button, {\n    size: \"small\",\n    color: \"primary\",\n    variant: \"contained\",\n    className: classes.deskBtns\n  }, __jsx(ShareIcon, null)))))));\n};\n\nexport default Product;","map":null,"metadata":{},"sourceType":"module"}