{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: _defineProperty({\n      backgroundColor: theme.palette.background.paper,\n      marginTop: 5\n    }, \"backgroundColor\", '#e0e0e0')\n  };\n});\nvar options = ['A-Z', 'Z-A', 'Price: High to Low', 'Price: Low to High'];\n\nvar SortBy = function SortBy() {\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      selectedIndex = _React$useState4[0],\n      setSelectedIndex = _React$useState4[1];\n\n  var handleClickListItem = function handleClickListItem(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleMenuItemClick = function handleMenuItemClick(event, index) {\n    setSelectedIndex(index);\n    setAnchorEl(null);\n  };\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  return __jsx(\"div\", {\n    className: classes.root\n  }, __jsx(List, {\n    component: \"nav\",\n    \"aria-label\": \"Sort By\"\n  }, __jsx(ListItem, {\n    button: true,\n    \"aria-haspopup\": \"true\",\n    \"aria-controls\": \"lock-menu\",\n    \"aria-label\": \"Sort By\",\n    onClick: handleClickListItem\n  }, __jsx(ListItemText, {\n    primary: \"Sort By\",\n    secondary: options[selectedIndex]\n  }))), __jsx(Menu, {\n    id: \"lock-menu\",\n    anchorEl: anchorEl,\n    keepMounted: true,\n    open: Boolean(anchorEl),\n    onClose: handleClose\n  }, options.map(function (option, index) {\n    return __jsx(MenuItem, {\n      key: option,\n      selected: index === selectedIndex,\n      onClick: function onClick(event) {\n        return handleMenuItemClick(event, index);\n      }\n    }, option);\n  })));\n};\n\nexport default SortBy;","map":null,"metadata":{},"sourceType":"module"}